/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/components/Dashboard/CompitatorKeywords/CompitorKeyCard.js":
/*!************************************************************************!*\
  !*** ./src/components/Dashboard/CompitatorKeywords/CompitorKeyCard.js ***!
  \************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// import React from 'react';\n// import DashboardCard from '../../DashboardCard'; // Import reusable DashboardCard component\n// import './CompetitorKeywordsCard.module.css'; // Import CSS file for this component\n// import { Bar } from 'react-chartjs-2'; // Import Bar chart from react-chartjs-2\n// import { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\n// // Register necessary Chart.js components\n// ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n// const CompetitorKeywordsCard = () => {\n//   // Data for the competitor keywords bar chart\n//   const data = {\n//     labels: ['LinkedIn', 'Facebook', 'Instagram', 'Twitter', 'YouTube', 'Share Chat'], // Labels for the bars\n//     datasets: [\n//       {\n//         label: 'Competitor Keywords', // Label for the dataset\n//         data: [22779, 62635, 29657, 12456, 10234, 8765], // The competitor keyword data (values)\n//         backgroundColor: ['#36A2EB', '#FF6384', '#FFCD56', '#4BC0C0', '#FF9F40', '#9966FF'], // Colors for each bar\n//         borderColor: ['#36A2EB', '#FF6384', '#FFCD56', '#4BC0C0', '#FF9F40', '#9966FF'], // Border color for each bar\n//         borderWidth: 1, // Border width\n//       },\n//     ],\n//   };\n//   // Options for the bar chart (horizontal bar chart)\n//   const options = {\n//     indexAxis: 'y', // Set horizontal bars by changing indexAxis to 'y'\n//     responsive: true,\n//     scales: {\n//       x: {\n//         beginAtZero: true, // Ensure the x-axis starts at zero\n//       },\n//     },\n//     plugins: {\n//       legend: {\n//         position: 'top',\n//       },\n//       tooltip: {\n//         callbacks: {\n//           label: function (tooltipItem) {\n//             return `${tooltipItem.dataset.label}: ${tooltipItem.raw}`;\n//           },\n//         },\n//       },\n//     },\n//   };\n//   return ( \n//     <DashboardCard className=\"competitor-keywords-card\">\n//       <div className=\"card-header\">Your Competitor Keywords & Trends\n//         {/* Adding a button with a link href */}\n//         <a href=\"/Competitors\" className=\"close-button\">\n//           <button>â†—</button>\n//         </a>\n//       </div>\n//       <div className=\"card-body\">\n//         <div className=\"chart-container\">\n//           <div className=\"bar-chart\">\n//             {/* Bar Chart for Competitor Keywords */}\n//             <Bar data={data} options={options} />\n//           </div>\n//           {/* <div className=\"competitor-info\">\n//             <p><strong>LinkedIn:</strong> 22,779</p>\n//             <p><strong>Facebook:</strong> 62,635</p>\n//             <p><strong>Instagram:</strong> 29,657</p>\n//             <p><strong>Twitter:</strong> 12,456</p>\n//             <p><strong>YouTube:</strong> 10,234</p>\n//             <p><strong>Share Chat:</strong> 8,765</p>\n//           </div> */}\n//         </div>\n//       </div>\n//     </DashboardCard>\n//   );\n// };\n// export default CompetitorKeywordsCard;\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports on update so we can compare the boundary\r\n                // signatures.\r\n                module.hot.dispose(function (data) {\r\n                    data.prevExports = currentExports;\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevExports !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevExports !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9EYXNoYm9hcmQvQ29tcGl0YXRvcktleXdvcmRzL0NvbXBpdG9yS2V5Q2FyZC5qcyIsIm1hcHBpbmdzIjoiQUFBQSw2QkFBNkI7QUFDN0IsOEZBQThGO0FBQzlGLHNGQUFzRjtBQUN0RixrRkFBa0Y7QUFDbEYsK0dBQStHO0FBRS9HLDRDQUE0QztBQUM1QyxvRkFBb0Y7QUFFcEYseUNBQXlDO0FBQ3pDLGtEQUFrRDtBQUNsRCxtQkFBbUI7QUFDbkIsZ0hBQWdIO0FBQ2hILGtCQUFrQjtBQUNsQixVQUFVO0FBQ1YsaUVBQWlFO0FBQ2pFLG1HQUFtRztBQUNuRyxzSEFBc0g7QUFDdEgsd0hBQXdIO0FBQ3hILDBDQUEwQztBQUMxQyxXQUFXO0FBQ1gsU0FBUztBQUNULE9BQU87QUFFUCx3REFBd0Q7QUFDeEQsc0JBQXNCO0FBQ3RCLDBFQUEwRTtBQUMxRSx3QkFBd0I7QUFDeEIsZ0JBQWdCO0FBQ2hCLGFBQWE7QUFDYixpRUFBaUU7QUFDakUsV0FBVztBQUNYLFNBQVM7QUFDVCxpQkFBaUI7QUFDakIsa0JBQWtCO0FBQ2xCLDJCQUEyQjtBQUMzQixXQUFXO0FBQ1gsbUJBQW1CO0FBQ25CLHVCQUF1QjtBQUN2Qiw0Q0FBNEM7QUFDNUMseUVBQXlFO0FBQ3pFLGVBQWU7QUFDZixhQUFhO0FBQ2IsV0FBVztBQUNYLFNBQVM7QUFDVCxPQUFPO0FBRVAsY0FBYztBQUNkLDJEQUEyRDtBQUMzRCx1RUFBdUU7QUFDdkUsbURBQW1EO0FBQ25ELDJEQUEyRDtBQUMzRCwrQkFBK0I7QUFDL0IsZUFBZTtBQUNmLGVBQWU7QUFDZixvQ0FBb0M7QUFDcEMsNENBQTRDO0FBQzVDLHdDQUF3QztBQUN4Qyx3REFBd0Q7QUFDeEQsb0RBQW9EO0FBQ3BELG1CQUFtQjtBQUNuQixrREFBa0Q7QUFDbEQsdURBQXVEO0FBQ3ZELHVEQUF1RDtBQUN2RCx3REFBd0Q7QUFDeEQsc0RBQXNEO0FBQ3RELHNEQUFzRDtBQUN0RCx3REFBd0Q7QUFDeEQsdUJBQXVCO0FBQ3ZCLGlCQUFpQjtBQUNqQixlQUFlO0FBQ2YsdUJBQXVCO0FBQ3ZCLE9BQU87QUFDUCxLQUFLO0FBRUwseUNBQXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9jb21wb25lbnRzL0Rhc2hib2FyZC9Db21waXRhdG9yS2V5d29yZHMvQ29tcGl0b3JLZXlDYXJkLmpzP2FjMWMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuLy8gaW1wb3J0IERhc2hib2FyZENhcmQgZnJvbSAnLi4vLi4vRGFzaGJvYXJkQ2FyZCc7IC8vIEltcG9ydCByZXVzYWJsZSBEYXNoYm9hcmRDYXJkIGNvbXBvbmVudFxyXG4vLyBpbXBvcnQgJy4vQ29tcGV0aXRvcktleXdvcmRzQ2FyZC5tb2R1bGUuY3NzJzsgLy8gSW1wb3J0IENTUyBmaWxlIGZvciB0aGlzIGNvbXBvbmVudFxyXG4vLyBpbXBvcnQgeyBCYXIgfSBmcm9tICdyZWFjdC1jaGFydGpzLTInOyAvLyBJbXBvcnQgQmFyIGNoYXJ0IGZyb20gcmVhY3QtY2hhcnRqcy0yXHJcbi8vIGltcG9ydCB7IENoYXJ0IGFzIENoYXJ0SlMsIENhdGVnb3J5U2NhbGUsIExpbmVhclNjYWxlLCBCYXJFbGVtZW50LCBUaXRsZSwgVG9vbHRpcCwgTGVnZW5kIH0gZnJvbSAnY2hhcnQuanMnO1xyXG5cclxuLy8gLy8gUmVnaXN0ZXIgbmVjZXNzYXJ5IENoYXJ0LmpzIGNvbXBvbmVudHNcclxuLy8gQ2hhcnRKUy5yZWdpc3RlcihDYXRlZ29yeVNjYWxlLCBMaW5lYXJTY2FsZSwgQmFyRWxlbWVudCwgVGl0bGUsIFRvb2x0aXAsIExlZ2VuZCk7XHJcblxyXG4vLyBjb25zdCBDb21wZXRpdG9yS2V5d29yZHNDYXJkID0gKCkgPT4ge1xyXG4vLyAgIC8vIERhdGEgZm9yIHRoZSBjb21wZXRpdG9yIGtleXdvcmRzIGJhciBjaGFydFxyXG4vLyAgIGNvbnN0IGRhdGEgPSB7XHJcbi8vICAgICBsYWJlbHM6IFsnTGlua2VkSW4nLCAnRmFjZWJvb2snLCAnSW5zdGFncmFtJywgJ1R3aXR0ZXInLCAnWW91VHViZScsICdTaGFyZSBDaGF0J10sIC8vIExhYmVscyBmb3IgdGhlIGJhcnNcclxuLy8gICAgIGRhdGFzZXRzOiBbXHJcbi8vICAgICAgIHtcclxuLy8gICAgICAgICBsYWJlbDogJ0NvbXBldGl0b3IgS2V5d29yZHMnLCAvLyBMYWJlbCBmb3IgdGhlIGRhdGFzZXRcclxuLy8gICAgICAgICBkYXRhOiBbMjI3NzksIDYyNjM1LCAyOTY1NywgMTI0NTYsIDEwMjM0LCA4NzY1XSwgLy8gVGhlIGNvbXBldGl0b3Iga2V5d29yZCBkYXRhICh2YWx1ZXMpXHJcbi8vICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBbJyMzNkEyRUInLCAnI0ZGNjM4NCcsICcjRkZDRDU2JywgJyM0QkMwQzAnLCAnI0ZGOUY0MCcsICcjOTk2NkZGJ10sIC8vIENvbG9ycyBmb3IgZWFjaCBiYXJcclxuLy8gICAgICAgICBib3JkZXJDb2xvcjogWycjMzZBMkVCJywgJyNGRjYzODQnLCAnI0ZGQ0Q1NicsICcjNEJDMEMwJywgJyNGRjlGNDAnLCAnIzk5NjZGRiddLCAvLyBCb3JkZXIgY29sb3IgZm9yIGVhY2ggYmFyXHJcbi8vICAgICAgICAgYm9yZGVyV2lkdGg6IDEsIC8vIEJvcmRlciB3aWR0aFxyXG4vLyAgICAgICB9LFxyXG4vLyAgICAgXSxcclxuLy8gICB9O1xyXG5cclxuLy8gICAvLyBPcHRpb25zIGZvciB0aGUgYmFyIGNoYXJ0IChob3Jpem9udGFsIGJhciBjaGFydClcclxuLy8gICBjb25zdCBvcHRpb25zID0ge1xyXG4vLyAgICAgaW5kZXhBeGlzOiAneScsIC8vIFNldCBob3Jpem9udGFsIGJhcnMgYnkgY2hhbmdpbmcgaW5kZXhBeGlzIHRvICd5J1xyXG4vLyAgICAgcmVzcG9uc2l2ZTogdHJ1ZSxcclxuLy8gICAgIHNjYWxlczoge1xyXG4vLyAgICAgICB4OiB7XHJcbi8vICAgICAgICAgYmVnaW5BdFplcm86IHRydWUsIC8vIEVuc3VyZSB0aGUgeC1heGlzIHN0YXJ0cyBhdCB6ZXJvXHJcbi8vICAgICAgIH0sXHJcbi8vICAgICB9LFxyXG4vLyAgICAgcGx1Z2luczoge1xyXG4vLyAgICAgICBsZWdlbmQ6IHtcclxuLy8gICAgICAgICBwb3NpdGlvbjogJ3RvcCcsXHJcbi8vICAgICAgIH0sXHJcbi8vICAgICAgIHRvb2x0aXA6IHtcclxuLy8gICAgICAgICBjYWxsYmFja3M6IHtcclxuLy8gICAgICAgICAgIGxhYmVsOiBmdW5jdGlvbiAodG9vbHRpcEl0ZW0pIHtcclxuLy8gICAgICAgICAgICAgcmV0dXJuIGAke3Rvb2x0aXBJdGVtLmRhdGFzZXQubGFiZWx9OiAke3Rvb2x0aXBJdGVtLnJhd31gO1xyXG4vLyAgICAgICAgICAgfSxcclxuLy8gICAgICAgICB9LFxyXG4vLyAgICAgICB9LFxyXG4vLyAgICAgfSxcclxuLy8gICB9O1xyXG5cclxuLy8gICByZXR1cm4gKCBcclxuLy8gICAgIDxEYXNoYm9hcmRDYXJkIGNsYXNzTmFtZT1cImNvbXBldGl0b3Ita2V5d29yZHMtY2FyZFwiPlxyXG4vLyAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhcmQtaGVhZGVyXCI+WW91ciBDb21wZXRpdG9yIEtleXdvcmRzICYgVHJlbmRzXHJcbi8vICAgICAgICAgey8qIEFkZGluZyBhIGJ1dHRvbiB3aXRoIGEgbGluayBocmVmICovfVxyXG4vLyAgICAgICAgIDxhIGhyZWY9XCIvQ29tcGV0aXRvcnNcIiBjbGFzc05hbWU9XCJjbG9zZS1idXR0b25cIj5cclxuLy8gICAgICAgICAgIDxidXR0b24+4oaXPC9idXR0b24+XHJcbi8vICAgICAgICAgPC9hPlxyXG4vLyAgICAgICA8L2Rpdj5cclxuLy8gICAgICAgPGRpdiBjbGFzc05hbWU9XCJjYXJkLWJvZHlcIj5cclxuLy8gICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNoYXJ0LWNvbnRhaW5lclwiPlxyXG4vLyAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJiYXItY2hhcnRcIj5cclxuLy8gICAgICAgICAgICAgey8qIEJhciBDaGFydCBmb3IgQ29tcGV0aXRvciBLZXl3b3JkcyAqL31cclxuLy8gICAgICAgICAgICAgPEJhciBkYXRhPXtkYXRhfSBvcHRpb25zPXtvcHRpb25zfSAvPlxyXG4vLyAgICAgICAgICAgPC9kaXY+XHJcbi8vICAgICAgICAgICB7LyogPGRpdiBjbGFzc05hbWU9XCJjb21wZXRpdG9yLWluZm9cIj5cclxuLy8gICAgICAgICAgICAgPHA+PHN0cm9uZz5MaW5rZWRJbjo8L3N0cm9uZz4gMjIsNzc5PC9wPlxyXG4vLyAgICAgICAgICAgICA8cD48c3Ryb25nPkZhY2Vib29rOjwvc3Ryb25nPiA2Miw2MzU8L3A+XHJcbi8vICAgICAgICAgICAgIDxwPjxzdHJvbmc+SW5zdGFncmFtOjwvc3Ryb25nPiAyOSw2NTc8L3A+XHJcbi8vICAgICAgICAgICAgIDxwPjxzdHJvbmc+VHdpdHRlcjo8L3N0cm9uZz4gMTIsNDU2PC9wPlxyXG4vLyAgICAgICAgICAgICA8cD48c3Ryb25nPllvdVR1YmU6PC9zdHJvbmc+IDEwLDIzNDwvcD5cclxuLy8gICAgICAgICAgICAgPHA+PHN0cm9uZz5TaGFyZSBDaGF0Ojwvc3Ryb25nPiA4LDc2NTwvcD5cclxuLy8gICAgICAgICAgIDwvZGl2PiAqL31cclxuLy8gICAgICAgICA8L2Rpdj5cclxuLy8gICAgICAgPC9kaXY+XHJcbi8vICAgICA8L0Rhc2hib2FyZENhcmQ+XHJcbi8vICAgKTtcclxuLy8gfTtcclxuXHJcbi8vIGV4cG9ydCBkZWZhdWx0IENvbXBldGl0b3JLZXl3b3Jkc0NhcmQ7XHJcblxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/Dashboard/CompitatorKeywords/CompitorKeyCard.js\n"));

/***/ })

});